<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" dir="ltr">
<head>
  <!-- map of weewx weather stations, by matthew wall -->
  <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
  <title>WeeWX: Stations Running WeeWX</title>
  <link href="weewx.css" rel="stylesheet" type="text/css" />
  <script src="weewx.js" type="text/javascript"></script>
  <style>
#map_container {
  margin-top: 10px;
}
#map_canvas {
  border: 1px solid #5f8ea9;
}
.location {
  font-family: Helvetic, Arial, sans-serif;
  font-size: 10pt;
  font-weight: bold;
}
.location_details {
  font-family: Helvetic, Arial, sans-serif;
  font-size: 8pt;
}
.gm-style-iw {
  width: 250px;
}
.details {
  font-style: italic;
  text-align: right;
  font-size: 80%;
}
#content {
  width: 100%;
}
#summary {
}
#instructions {
  float: left;
  padding-right: 40px;
  width: 50%;
}
#station_summary {
  float: right;
}
#station_summary_details td {
  padding-right: 10px;
}
#ping_summary {
  float: right;
}
#ping_details {
  width: 180px;
  height: 80px;
  padding-left: 50px;
  padding-right: 10px;
}
#sites {
  clear: both;
  padding-top: 20px;
}
#site_listing td {
  background-repeat: no-repeat;
  background-position: center;
}
.alignright {
  text-align: right;
}
.oddrow {
  background-color: #f8f8f8;
}
.evenrow {
  background-color: #ffffff;
}
.indicator {
  width: 18px;
  border: 1px solid #2f5e79;
}
  </style>
  <script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
  <script type="text/javascript">
var sites = [];
var map;
var count_keys = new Array(); /* associative array of station type counts */
var pingdays = 30; /* number of days in ping histogram */
var pings = new Array(pingdays); /* histogram of daily pings */
var stale = 0;
var maxpings = 0; /* max pings in single day */

var infowindow = new google.maps.InfoWindow({
  content: 'nothing selected'
});

var backgroundColor = '#ffffff';
var highlightColor = '#9fcef9';

function count_sorter(a,b) {
  if(a == 'total') {
    return -1;
  } else if(b == 'total') {
    return 1;
  }
  var A = a.toLowerCase();
  var B = b.toLowerCase();
  if(A < B) {
    return -1;
  } else if(A > B) {
    return 1;
  } else {
    return 0;
  }
}

function initialize_map() {
  var now = Math.round((new Date).getTime() / 1000);

  /* create a map with the settings we want */
  var latlng = new google.maps.LatLng(21.0,0.0);
  var settings = {
    zoom: 2,
    center: latlng,
    mapTypeControl: true,
    mapTypeControlOptions: {
      style: google.maps.MapTypeControlStyle.DROPDOWN_MENU
    },
    navigationControl: true,
    navigationControlOptions: {
      style: google.maps.NavigationControlStyle.SMALL
    },
    mapTypeId: google.maps.MapTypeId.ROADMAP
  };

  /* initialize the ping histogram */
  for(var i=0; i<pings.length; i++) { pings[i] = 0; }

  /* populate the map and station list table */
  var canvas = document.getElementById("map_canvas");
  map = new google.maps.Map(canvas, settings);
  var s = document.getElementById('site_listing');
  var tbl = document.createElement('table');
  var tbdy = document.createElement('tbody');
  rowclass = 'oddrow';

  /* track counts of each station type */
  var counts = {};
  counts['total'] = 0;

  /* loop through all sites to get the data we need */
  for (var i=0; i<sites.length; i++) {
    var title = 'untitled';
    if(sites[i].description.length > 0) {
      title = sites[i].description;
    } else {
      title = sites[i].url;
    }
    var pos = new google.maps.LatLng(sites[i].latitude, sites[i].longitude);
    var mkr = new google.maps.Marker({
      position: pos,
      map: map,
      title: title,
    });
    sites[i].marker = mkr;
    attach_info(map, mkr, i);
    var tr = document.createElement('tr');
    var td = document.createElement('td');
    td.innerHTML = '<a href="' + sites[i].url + '">' + title + '</a><br/><small>' + sites[i].url + '</small>';
    tr.appendChild(td);
    var td = document.createElement('td');
    var date = new Date(sites[i].last_seen * 1000);
    td.className = 'alignright';
    td.innerHTML = sites[i].station + '<br/><small>' + date.toUTCString() + '</small>';
    tr.appendChild(td);
    var td = document.createElement('td');
    td.id = 'site_' + i;
    td.className = 'indicator';
    attach_station(td, map, mkr, i);
    tr.appendChild(td);
    tr.className = rowclass;
    tbdy.appendChild(tr);
    if(rowclass == 'oddrow') {
      rowclass = 'evenrow'
    } else {
      rowclass = 'oddrow'
    }

    /* do the station count accounting */
    counts['total'] = counts['total'] + 1;
    var n = 0;
    if(sites[i].station in counts) {
      n = counts[sites[i].station];
    }
    counts[sites[i].station] = n + 1;

    /* do the ping accounting */
    var tdiff = now - sites[i].last_seen;
    var idx = Math.round(tdiff / 86400);
    if(idx < pingdays) {
      pings[idx] += 1;
    } else {
      stale += 1;
    }
    if(pings[idx] > maxpings) {
      maxpings = pings[idx];
    }
  }
  tbl.appendChild(tbdy);
  s.appendChild(tbl);

  /* populate the station summary table */
  var s = document.getElementById('station_summary_details');
  var tbl = document.createElement('table');
  var tbdy = document.createElement('tbody');
  for(var key in counts) {
    count_keys.push(key);
  }
  count_keys.sort(count_sorter);
  for(var key in count_keys) {
    var tr = document.createElement('tr');
    var td = document.createElement('td');
    td.innerHTML = count_keys[key];
    tr.appendChild(td);
    var td = document.createElement('td');
    td.className = 'alignright';
    td.innerHTML = counts[count_keys[key]];
    tr.appendChild(td);
    var td = document.createElement('td');
    td.id = 'station_type_' + count_keys[key];
    td.className = 'indicator';
    attach_station_type(td, count_keys[key]);
    tr.appendChild(td);
    tbdy.appendChild(tr);
  }
  tbl.appendChild(tbdy);
  s.appendChild(tbl);

  /* render the ping histogram */
  canvas = document.getElementById('ping_details');
  if(canvas) {
    maxpings = 10;
    var w = canvas.clientWidth;
    var h = canvas.clientHeight;
    var barwidth = Math.round(w / pings.length);
    var unitheight = Math.round(h / maxpings);
    var c = canvas.getContext("2d");
    c.strokeStyle = "#dddddd";
    for(var i=0; i<h; i+=unitheight) {
      c.beginPath();
      c.moveTo(0, i);
      c.lineTo(w, i); 
      c.stroke();
    }
    c.fillStyle = "#888888";
    c.strokeStyle = "#dddddd";
    for(var i=0; i<pings.length; i++) {
      var bh = pings[pings.length-i-1]*unitheight;
      c.fillRect(i*barwidth, h-bh, barwidth, bh);
      c.beginPath();
      c.moveTo(i*barwidth, h-4);
      c.lineTo(i*barwidth, h);
      c.stroke();
    }
  }
}

function create_content(idx) {
  var str = '<p class="location">';
  str += '<a href="' + sites[idx].url + '">';
  if(sites[idx].description.length > 0) {
    str += sites[idx].description;
  } else {
    str += sites[idx].url;
  }
  str += '</a></p>';
  str += '<p class="location_details">';
  str += sites[idx].latitude.toFixed(3) + ', ';
  str += sites[idx].longitude.toFixed(3) + '<br/>';
  str += sites[idx].station + '<br/>';
  str += '</p>';
  return str;
}

function attach_info(map, marker, idx) {
  google.maps.event.addListener(marker, 'click', function() {
      var str = create_content(idx);
      infowindow.setContent(str);
      infowindow.open(map, marker);
      hide_all_dots();
      show_dot(idx);
    });
}

function attach_station(elem, map, marker, idx) {
  elem.addEventListener('click', function() {
      var str = create_content(idx);
      infowindow.setContent(str);
      infowindow.open(map, marker);
      hide_all_dots();
      show_dot(idx);
    });
}

function attach_station_type(elem, station_type) {
  elem.addEventListener('click', function() {
      for(var key in count_keys) {
        dehighlight(document.getElementById('station_type_'+count_keys[key]));
      }
      highlight(document.getElementById('station_type_' + station_type));
      infowindow.close();
      dehighlight_all();
      infowindow.close();
      hide_all_markers();
      hide_all_dots();
      for(i=0; i<sites.length; i++) {
        if(station_type == 'total' || sites[i].station == station_type) {
          show_marker(i);
        }
        if(sites[i].station == station_type) {
          highlight_row(i);
        }
      }
    });
}

function highlight(elem) {
  if(elem) {
    elem.style.backgroundColor = highlightColor;
  }
}

function dehighlight(elem) {
  if(elem) {
    elem.style.backgroundColor = backgroundColor;
  }
}

function highlight_row(idx) {
  highlight(document.getElementById('site_' + idx));
}

function dehighlight_row(idx) {
  dehighlight(document.getElementById('site_' + idx));
}

function dehighlight_all() {
  for(var i=0; i<sites.length; i++) {
    dehighlight_row(i);
  }
}

function show_dot(idx) {
  elem = document.getElementById('site_' + idx);
  if(elem) {
    elem.style.backgroundImage = 'url(dot.png)';
  }
}

function hide_dot(idx) {
  elem = document.getElementById('site_' + idx);
  if(elem) {
    elem.style.backgroundImage = '';
  }
}

function hide_all_dots() {
  for(var i=0; i<sites.length; i++) {
    hide_dot(i);
  }
}

function show_marker(idx) {
  sites[idx].marker.setMap(map);
}

function hide_marker(idx) {
  sites[idx].marker.setMap(null);
}

function show_all_markers() {
  for(var i=0; i<sites.length; i++) {
    show_marker(i);
  }
}

function hide_all_markers() {
  for(var i=0; i<sites.length; i++) {
    hide_marker(i);
  }
}

function toggle(control, id) {
  elem = document.getElementById(id);
  if(elem) {
    var html = control.innerHTML;
    var display = 'none';
    var indicator = '';
    if(elem.style.display != 'none') {
      display = 'none';
      indicator = '&#x25b6;';
    } else {
      display = 'inline';
      indicator = '&#x25bc;';
    }
    elem.style.display = display;
    html = indicator + html.substr(1,html.length);
    control.innerHTML = html;
  }
}
  </script>
</head>

<body onload="initialize_map(); populate_header('stations');">
  <div id="container">
    <div id="masthead">
      <h1><a href='.'>WeeWX</a></h1>
      <p>Open source software for your weather station</p>
    </div>

    <div id="navigation">
    </div>

    <div id='map_container'>
      <div id='map_canvas' style='width:100%; height:500px'></div>

      <div class='details'>
        LAST_MODIFIED
      </div>
    </div>

    <div id='content'>
      <div id='summary'>
        <div id='instructions'>
          <strong>How to Add Your Station</strong>
          <div id='instruction_details'>
            <p>
	      Enable <span class='code'>register_this_station</span> in
              weewx.conf, then restart weewx:
            </p>
	    <pre>
[StdRESTful]
    [[StationRegistry]]
        register_this_station = True
	    </pre>
          </div>
        </div>
        <div id='ping_summary'>
          <canvas id='ping_details'></canvas>
        </div>
        <div id='station_summary'>
          <strong>Station Summary</strong>
          <div id='station_summary_details'></div>
        </div>
      </div>

      <div id='sites'>
        <div onclick="toggle(this,'site_listing')">&#x25b6; <strong>Station List</strong></div>
        <div id='site_listing' style='display:none'></div>
      </div>
    </div>
  </div>

  <script type='text/javascript'>
var gaJsHost = (('https:' == document.location.protocol) ? 'https://ssl.' : 'http://www.');
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
  </script>
  <script type='text/javascript'>
try {
  var pageTracker = _gat._getTracker('UA-11386156-1');
  pageTracker._trackPageview();
} catch(err) {}
  </script>  
</body>
</html>
